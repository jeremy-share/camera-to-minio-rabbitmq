services:
  - docker:dind

variables:
  CI_TOOLS_PREFIX: ""

stages:
  - test-development
  - test-production
  - docker-development
  - docker-master
  - docker-production
  - package-development

test-development:
  retry: 2
  image: ${FROM_IMAGE_PREFIX_DOCKER_HUB}python:3.9.6-alpine
  stage: test-development
  script:
    - make install-packages-apk
    - make install-dev
    - make qa
  except:
    - tags

test-production:
  retry: 2
  image: ${FROM_IMAGE_PREFIX_DOCKER_HUB}python:3.9.6-alpine
  stage: test-production
  script:
    - make install-packages-apk
    - make install-dev
    - make qa
    - make coverage-report
  artifacts:
    paths:
      - .coverage
      - build/
    expire_in: 30 days
  only:
    - tags

docker-development:
  retry: 2
  stage: docker-development
  image: ${CI_TOOLS_DOCKER_IMAGE_STABLE_V1}
  variables:
    DOCKER_TAG: "test"
    VERSION_PREFIX: "test_"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:${DOCKER_TAG} || true
    - export VERSION_TIMED="$(${CI_TOOLS_PREFIX}ci-version-timed)"
    - docker build
      --pull
      --build-arg "FROM_IMAGE_PREFIX=${FROM_IMAGE_PREFIX_DOCKER_HUB}"
      --build-arg "APP_BUILD_DATE=`${CI_TOOLS_PREFIX}ci-date-rfc-3339`"
      --build-arg "APP_VERSION=${VERSION_PREFIX}`${CI_TOOLS_PREFIX}ci-version`"
      --build-arg "APP_VERSION_TIMED=${VERSION_PREFIX}${VERSION_TIMED}"
      --build-arg "APP_VERSION_HASH=${VERSION_PREFIX}`${CI_TOOLS_PREFIX}ci-version-hash`"
      --build-arg "APP_VERSION_STRING=${VERSION_PREFIX}`${CI_TOOLS_PREFIX}ci-version-string`"
      --build-arg "APP_VCS_URL=${CI_PROJECT_URL}"
      --tag ${CI_REGISTRY_IMAGE}:${DOCKER_TAG}
      
      .
  except:
    - tags
    - master

docker-master:
  retry: 2
  stage: docker-master
  image: ${CI_TOOLS_DOCKER_IMAGE_STABLE_V1}
  variables:
    DOCKER_TAG: "test"
    VERSION_PREFIX: "test_"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:${DOCKER_TAG} || true
    - export VERSION_TIMED="$(${CI_TOOLS_PREFIX}ci-version-timed)"
    - docker build
      --pull
      --build-arg "FROM_IMAGE_PREFIX=${FROM_IMAGE_PREFIX_DOCKER_HUB}"
      --build-arg "APP_BUILD_DATE=`${CI_TOOLS_PREFIX}ci-date-rfc-3339`"
      --build-arg "APP_VERSION=${VERSION_PREFIX}`${CI_TOOLS_PREFIX}ci-version`"
      --build-arg "APP_VERSION_TIMED=${VERSION_PREFIX}${VERSION_TIMED}"
      --build-arg "APP_VERSION_HASH=${VERSION_PREFIX}`${CI_TOOLS_PREFIX}ci-version-hash`"
      --build-arg "APP_VERSION_STRING=${VERSION_PREFIX}`${CI_TOOLS_PREFIX}ci-version-string`"
      --build-arg "APP_VCS_URL=${CI_PROJECT_URL}"
      --tag ${CI_REGISTRY_IMAGE}:${DOCKER_TAG}
      
      .
    - docker push ${CI_REGISTRY_IMAGE}:${DOCKER_TAG}
    
  except:
    - tags
  only:
    - master

docker-production:
  retry: 2
  stage: docker-production
  image: ${CI_TOOLS_DOCKER_IMAGE_STABLE_V1}
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_TOKEN
    
  script:
    - docker pull ${CI_REGISTRY_IMAGE}:master
    - export VERSION_TIMED="$(${CI_TOOLS_PREFIX}ci-version-timed)"
    - docker build
      --pull
      --build-arg "FROM_IMAGE_PREFIX=${FROM_IMAGE_PREFIX_DOCKER_HUB}"
      --build-arg "APP_BUILD_DATE=`${CI_TOOLS_PREFIX}ci-date-rfc-3339`"
      --build-arg "APP_VERSION=`${CI_TOOLS_PREFIX}ci-version`"
      --build-arg "APP_VERSION_TIMED=${VERSION_TIMED}"
      --build-arg "APP_VERSION_HASH=`${CI_TOOLS_PREFIX}ci-version-hash`"
      --build-arg "APP_VERSION_STRING=`${CI_TOOLS_PREFIX}ci-version-string`"
      --build-arg "APP_VCS_URL=${CI_PROJECT_URL}"
      --tag ${CI_REGISTRY_IMAGE}:latest
      --tag ${CI_REGISTRY_IMAGE}:stable
      --tag ${CI_REGISTRY_IMAGE}:master
      --tag ${CI_REGISTRY_IMAGE}:`${CI_TOOLS_PREFIX}ci-version-major`
      --tag ${CI_REGISTRY_IMAGE}:`${CI_TOOLS_PREFIX}ci-version-major-minor`
      --tag ${CI_REGISTRY_IMAGE}:`${CI_TOOLS_PREFIX}ci-version`
      --tag ${CI_REGISTRY_IMAGE}:${VERSION_TIMED}
      
      .
    - echo "Pushing to Gitlab"
    - docker push ${CI_REGISTRY_IMAGE}:latest
    - docker push ${CI_REGISTRY_IMAGE}:stable
    - docker push ${CI_REGISTRY_IMAGE}:master
    - docker push ${CI_REGISTRY_IMAGE}:`${CI_TOOLS_PREFIX}ci-version-major`
    - docker push ${CI_REGISTRY_IMAGE}:`${CI_TOOLS_PREFIX}ci-version-major-minor`
    - docker push ${CI_REGISTRY_IMAGE}:`${CI_TOOLS_PREFIX}ci-version`
    - docker push ${CI_REGISTRY_IMAGE}:${VERSION_TIMED}
    
  only:
    - tags
